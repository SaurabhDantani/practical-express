<div class="col-md-6">
    <div class="card">
      <div class="card-header d-flex">
        <h3>Promoter Holdings</h3>
  
        <% if(ipoDetailsQuery.isBeforeCutoffDate) {%>
            <%- include('../forms/editPromoterHoldings.ejs', { IpoData: ipoDetailsQuery }) %>
          <label class="ml-auto" style="font-size: x-large; margin-top: 1.2%;" onclick="syncPromoHolding()">
            <i class="fa fa-sync" style="border: none; color: blue; cursor: pointer;"></i>
          </label>
        <%}%>
      </div>
      <p>Promoter Names: <%= ipoDetailsQuery?.PromoterHoldings?.PromoterNames%></p>
      <div class="card-body table-border-style">
        <div class="table-responsive">
          <table class="table table-hover">
            <tbody>
                <tr>
                  <th>PreIssue</th>
                  <td><%= ipoDetailsQuery?.PromoterHoldings?.PreIssue %></td>
                </tr>

                <tr>
                  <th>PostIssue</th>
                  <td><%= ipoDetailsQuery?.PromoterHoldings?.PostIssue%></td>
                </tr>
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </div>
  
  <!-- Loader -->
    <%- include('../ui/loader.ejs') %>
    <%- include('../ui/loader.ejs') %>

  
  <script>
  async function syncPromoHolding() {
    const loader = document.getElementById('loader');
    loader.classList.remove('d-none');
    const ipoDetails = {
        IpoId: '<%= ipoDetailsQuery.IpoId %>',
        ChitorName: '<%= ipoDetailsQuery.ChitorName %>',
        ChitorId: '<%= ipoDetailsQuery.ChitorId %>',
    };
  
    try {
        const response = await fetch('/scraper/syncPromoHolding', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(ipoDetails),
        });
  
        const result = await response.json();
        if (response.status === 200) {        
        renderToast('Sync successful', 'success');    
        reloadFun()
      } else {
        renderToast(result.error || 'Sync failed', 'error');
        console.log(`Sync failed: ${result.error || 'Unknown error'}`, 'error');
      }
    } catch (error) {
        showToast(`Sync failed: ${error.message}`, 'error');
    } finally {
        loader.classList.add('d-none');
    }
  }

  </script>
  
  <!--  -->
  </style>
  